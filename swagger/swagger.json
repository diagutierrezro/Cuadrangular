{
    "swagger": "2.0",
    "info": {
        "title": "beego Test API",
        "description": "beego has a very cool tools to autogenerate documents for your API",
        "version": "1.0.0",
        "termsOfService": "http://beego.me/",
        "contact": {
            "email": "astaxie@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/GenerarPartidos/": {
            "get": {
                "tags": [
                    "GenerarPartidos"
                ],
                "description": "generar partidos",
                "operationId": "PartidosController.Generar Partidos",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RegistrarPartido content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RegistrarPartidos"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RegistrarPartidos"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/cuadrangular_equipo/": {
            "get": {
                "tags": [
                    "cuadrangular_equipo"
                ],
                "description": "get CuadrangularEquipo",
                "operationId": "CuadrangularEquipoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CuadrangularEquipo"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "cuadrangular_equipo"
                ],
                "description": "create CuadrangularEquipo",
                "operationId": "CuadrangularEquipoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CuadrangularEquipo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CuadrangularEquipo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.CuadrangularEquipo"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/cuadrangular_equipo/{id}": {
            "get": {
                "tags": [
                    "cuadrangular_equipo"
                ],
                "description": "get CuadrangularEquipo by id",
                "operationId": "CuadrangularEquipoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CuadrangularEquipo"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "cuadrangular_equipo"
                ],
                "description": "update the CuadrangularEquipo",
                "operationId": "CuadrangularEquipoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CuadrangularEquipo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CuadrangularEquipo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CuadrangularEquipo"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "cuadrangular_equipo"
                ],
                "description": "delete the CuadrangularEquipo",
                "operationId": "CuadrangularEquipoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/equipo/": {
            "get": {
                "tags": [
                    "equipo"
                ],
                "description": "get Equipo",
                "operationId": "EquipoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Equipo"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "equipo"
                ],
                "description": "create Equipo",
                "operationId": "EquipoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Equipo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Equipo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Equipo"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/equipo/{id}": {
            "get": {
                "tags": [
                    "equipo"
                ],
                "description": "get Equipo by id",
                "operationId": "EquipoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Equipo"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "equipo"
                ],
                "description": "update the Equipo",
                "operationId": "EquipoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Equipo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Equipo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Equipo"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "equipo"
                ],
                "description": "delete the Equipo",
                "operationId": "EquipoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/partido/": {
            "get": {
                "tags": [
                    "partido"
                ],
                "description": "get Partido",
                "operationId": "PartidoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Partido"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "partido"
                ],
                "description": "create Partido",
                "operationId": "PartidoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Partido content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Partido"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Partido"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/partido/{id}": {
            "get": {
                "tags": [
                    "partido"
                ],
                "description": "get Partido by id",
                "operationId": "PartidoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Partido"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "partido"
                ],
                "description": "update the Partido",
                "operationId": "PartidoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Partido content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Partido"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Partido"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "partido"
                ],
                "description": "delete the Partido",
                "operationId": "PartidoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.CuadrangularEquipo": {
            "title": "CuadrangularEquipo",
            "type": "object",
            "properties": {
                "DiferenciaGol": {
                    "type": "integer",
                    "format": "int64"
                },
                "GolesContra": {
                    "type": "integer",
                    "format": "int64"
                },
                "GolesFavor": {
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdEquipo": {
                    "$ref": "#/definitions/models.Equipo"
                },
                "Puntos": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.Equipo": {
            "title": "Equipo",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                }
            }
        },
        "models.Partido": {
            "title": "Partido",
            "type": "object",
            "properties": {
                "GolesLocal": {
                    "type": "integer",
                    "format": "int64"
                },
                "GolesVisitante": {
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdEquipoLocal": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdEquipoVisitante": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.RegistrarPartidos": {
            "title": "RegistrarPartidos",
            "type": "object"
        }
    },
    "tags": [
        {
            "name": "partido",
            "description": "PartidoController operations for Partido\n"
        },
        {
            "name": "equipo",
            "description": "EquipoController operations for Equipo\n"
        },
        {
            "name": "cuadrangular_equipo",
            "description": "CuadrangularEquipoController operations for CuadrangularEquipo\n"
        },
        {
            "name": "GenerarPartidos",
            "description": "PartidosController operations for Equipo\n"
        }
    ]
}